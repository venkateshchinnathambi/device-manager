
services:

  vault:
   image: hashicorp/vault:1.15
   container_name: vault
   ports:
    - "8200:8200"
   volumes:
    - ./vault/vault-config.hcl:/vault/config/vault-config.hcl
    - vault-data:/vault/data
   command: vault server -config=/vault/config/vault-config.hcl
   cap_add:
    - IPC_LOCK
   environment:
    VAULT_ADDR: "http://0.0.0.0:8200"


  redis:
    image: redis:7
    ports:
      - "6379:6379"

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: device_manager
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: venkatesh
    volumes:
      - thermostat_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  web:
    build:
      context: ./web_app
      dockerfile: Dockerfile    
    volumes:
      - ./web_app:/app      
    command: bundle exec rails server -b 0.0.0.0 -p 3010
    ports:
      - "3010:3010"     
    depends_on:
      - postgres
      - redis
    environment:
      - PG_HOST=postgres
      - PG_USER=postgres
      - PG_PASSWORD=venkatesh
      - PG_DB=device_manager
      - PG_PORT=5432
      - REDIS_URL=redis://redis:6379/1
      - ANYCABLE_RPC_SECRET=42dc970ba19a926c1bfdf752f19b7fe0
      - ANYCABLE_RPC_HOST=anycable-rpc:50051
      - DATABASE_URL=postgres://postgres:venkatesh@postgres:5432/device_manager
      - RAILS_ENV=production
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=venkatesh
      - POSTGRES_HOST=postgres
      - RAILS_MASTER_KEY="e0c91999021681e45fbd887b3cf34201"
   

  influxdb:
    image: influxdb:1.8
    environment:
      INFLUXDB_DB: k6
    volumes:
      - influxdb_data:/var/lib/influxdb
    ports:
      - "8086:8086"

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"

  grpc:
    build:
      context: ./device_core
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - kafka
    ports:
      - "7778:7777"
    #volumes:
    #  - ./ssl/:/app/ssl
    environment:
      - GO_ENV=development
      - SECRET_KEY_BASE=a7aa7ea2608386f9d49b05e7062667b3c745574d8e04d7393b689a8f48100f42d1e212bf8690543c9a06d7c33c9e307fc8a1373fe99729cd1cfb5d98008499e9
     

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper
      
  anycable-rpc:
    build:
      context: ./web_app
    command: bundle exec anycable
    volumes:
      - ./web_app:/app
    depends_on:
      - redis
      - postgres
    environment:
      - REDIS_URL=redis://redis:6379/1       
      - RAILS_ENV=production
      - RAILS_MASTER_KEY=e0c91999021681e45fbd887b3cf34201
      - SECRET_KEY_BASE=a7aa7ea2608386f9d49b05e7062667b3c745574d8e04d7393b689a8f48100f42d1e212bf8690543c9a06d7c33c9e307fc8a1373fe99729cd1cfb5d98008499e9
      - ANYCABLE_RPC_SECRET=42dc970ba19a926c1bfdf752f19b7fe0
      - ANYCABLE_RPC_HOST=0.0.0.0
      - ANYCABLE_RPC_PORT=50051
      - ANYCABLE_LOG_LEVEL=trace
      #- ANYCABLE_RPC_TLS_CERT=/ssl/server.crt
      #- ANYCABLE_RPC_TLS_KEY=/ssl/server.key
    #healthcheck:
     # test: ["CMD", "sh", "-c", "nc -z localhost 50051"]
     # interval: 5s
     # timeout: 3s
     # retries: 5

    ports:
      - "50051:50051"
      
  anycable:
    image: anycable/anycable-go
    ports:
      - "3334:8080" # This is the public WebSocket port
    environment:
      - ANYCABLE_REDIS_URL=redis://redis:6379/1
      - ANYCABLE_LOG_LEVEL=trace
      - ANYCABLE_DEBUG=true
      - ANYCABLE_HOST=0.0.0.0 
      - ANYCABLE_RPC_HOST=anycable-rpc:50051 
      - ANYCABLE_RPC_SECRET=42dc970ba19a926c1bfdf752f19b7fe0
     # - ANYCABLE_RPC_TLS=true                     
     # - ANYCABLE_RPC_TLS_SKIP_VERIFY=true
    depends_on:
      - anycable-rpc        
      - redis       
      - web
       
    restart: on-failure
    #healthcheck:
    #  test:  ["CMD", "sh", "-c", "nc -z anycable-rpc 50051"]
    #  interval: 5s
    #  timeout: 3s
    #  retries: 5
  
   

volumes:
  thermostat_db_data:
  influxdb_data:
  grafana_data:
  vault-data:

