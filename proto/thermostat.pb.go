// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.4
// source: proto/thermostat.proto

package thermostatpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Temperature_Scale int32

const (
	Temperature_F Temperature_Scale = 0
	Temperature_C Temperature_Scale = 1
)

// Enum value maps for Temperature_Scale.
var (
	Temperature_Scale_name = map[int32]string{
		0: "F",
		1: "C",
	}
	Temperature_Scale_value = map[string]int32{
		"F": 0,
		"C": 1,
	}
)

func (x Temperature_Scale) Enum() *Temperature_Scale {
	p := new(Temperature_Scale)
	*p = x
	return p
}

func (x Temperature_Scale) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Temperature_Scale) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_thermostat_proto_enumTypes[0].Descriptor()
}

func (Temperature_Scale) Type() protoreflect.EnumType {
	return &file_proto_thermostat_proto_enumTypes[0]
}

func (x Temperature_Scale) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Temperature_Scale.Descriptor instead.
func (Temperature_Scale) EnumDescriptor() ([]byte, []int) {
	return file_proto_thermostat_proto_rawDescGZIP(), []int{4, 0}
}

type TemperatureSetPointUpdated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      *DeviceId              `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	SetPoints     *SetPoints             `protobuf:"bytes,2,opt,name=set_points,json=setPoints,proto3,oneof" json:"set_points,omitempty"`
	Timestamp     *int32                 `protobuf:"varint,3,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemperatureSetPointUpdated) Reset() {
	*x = TemperatureSetPointUpdated{}
	mi := &file_proto_thermostat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemperatureSetPointUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemperatureSetPointUpdated) ProtoMessage() {}

func (x *TemperatureSetPointUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thermostat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemperatureSetPointUpdated.ProtoReflect.Descriptor instead.
func (*TemperatureSetPointUpdated) Descriptor() ([]byte, []int) {
	return file_proto_thermostat_proto_rawDescGZIP(), []int{0}
}

func (x *TemperatureSetPointUpdated) GetDeviceId() *DeviceId {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *TemperatureSetPointUpdated) GetSetPoints() *SetPoints {
	if x != nil {
		return x.SetPoints
	}
	return nil
}

func (x *TemperatureSetPointUpdated) GetTimestamp() int32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type SetPoints struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CoolSetPoint  *Temperature           `protobuf:"bytes,1,opt,name=cool_set_point,json=coolSetPoint,proto3,oneof" json:"cool_set_point,omitempty"`
	HeatSetPoint  *Temperature           `protobuf:"bytes,2,opt,name=heat_set_point,json=heatSetPoint,proto3,oneof" json:"heat_set_point,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetPoints) Reset() {
	*x = SetPoints{}
	mi := &file_proto_thermostat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetPoints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPoints) ProtoMessage() {}

func (x *SetPoints) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thermostat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPoints.ProtoReflect.Descriptor instead.
func (*SetPoints) Descriptor() ([]byte, []int) {
	return file_proto_thermostat_proto_rawDescGZIP(), []int{1}
}

func (x *SetPoints) GetCoolSetPoint() *Temperature {
	if x != nil {
		return x.CoolSetPoint
	}
	return nil
}

func (x *SetPoints) GetHeatSetPoint() *Temperature {
	if x != nil {
		return x.HeatSetPoint
	}
	return nil
}

type DeviceId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceId) Reset() {
	*x = DeviceId{}
	mi := &file_proto_thermostat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceId) ProtoMessage() {}

func (x *DeviceId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thermostat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceId.ProtoReflect.Descriptor instead.
func (*DeviceId) Descriptor() ([]byte, []int) {
	return file_proto_thermostat_proto_rawDescGZIP(), []int{2}
}

func (x *DeviceId) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type IndoorTemperatueUpdated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      *DeviceId              `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	Temperature   *Temperature           `protobuf:"bytes,2,opt,name=temperature,proto3,oneof" json:"temperature,omitempty"`
	Timestamp     *int32                 `protobuf:"varint,3,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndoorTemperatueUpdated) Reset() {
	*x = IndoorTemperatueUpdated{}
	mi := &file_proto_thermostat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndoorTemperatueUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndoorTemperatueUpdated) ProtoMessage() {}

func (x *IndoorTemperatueUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thermostat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndoorTemperatueUpdated.ProtoReflect.Descriptor instead.
func (*IndoorTemperatueUpdated) Descriptor() ([]byte, []int) {
	return file_proto_thermostat_proto_rawDescGZIP(), []int{3}
}

func (x *IndoorTemperatueUpdated) GetDeviceId() *DeviceId {
	if x != nil {
		return x.DeviceId
	}
	return nil
}

func (x *IndoorTemperatueUpdated) GetTemperature() *Temperature {
	if x != nil {
		return x.Temperature
	}
	return nil
}

func (x *IndoorTemperatueUpdated) GetTimestamp() int32 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type Temperature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scale         *Temperature_Scale     `protobuf:"varint,1,opt,name=scale,proto3,enum=thermostat.Temperature_Scale,oneof" json:"scale,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Temperature) Reset() {
	*x = Temperature{}
	mi := &file_proto_thermostat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Temperature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Temperature) ProtoMessage() {}

func (x *Temperature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thermostat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Temperature.ProtoReflect.Descriptor instead.
func (*Temperature) Descriptor() ([]byte, []int) {
	return file_proto_thermostat_proto_rawDescGZIP(), []int{4}
}

func (x *Temperature) GetScale() Temperature_Scale {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return Temperature_F
}

func (x *Temperature) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Event struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to EventType:
	//
	//	*Event_SetPointsUpdated
	//	*Event_IndoorTemperatureUpdated
	EventType     isEvent_EventType `protobuf_oneof:"event_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_proto_thermostat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_thermostat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_thermostat_proto_rawDescGZIP(), []int{5}
}

func (x *Event) GetEventType() isEvent_EventType {
	if x != nil {
		return x.EventType
	}
	return nil
}

func (x *Event) GetSetPointsUpdated() *TemperatureSetPointUpdated {
	if x != nil {
		if x, ok := x.EventType.(*Event_SetPointsUpdated); ok {
			return x.SetPointsUpdated
		}
	}
	return nil
}

func (x *Event) GetIndoorTemperatureUpdated() *IndoorTemperatueUpdated {
	if x != nil {
		if x, ok := x.EventType.(*Event_IndoorTemperatureUpdated); ok {
			return x.IndoorTemperatureUpdated
		}
	}
	return nil
}

type isEvent_EventType interface {
	isEvent_EventType()
}

type Event_SetPointsUpdated struct {
	SetPointsUpdated *TemperatureSetPointUpdated `protobuf:"bytes,1,opt,name=set_points_updated,json=setPointsUpdated,proto3,oneof"`
}

type Event_IndoorTemperatureUpdated struct {
	IndoorTemperatureUpdated *IndoorTemperatueUpdated `protobuf:"bytes,2,opt,name=indoor_temperature_updated,json=indoorTemperatureUpdated,proto3,oneof"`
}

func (*Event_SetPointsUpdated) isEvent_EventType() {}

func (*Event_IndoorTemperatureUpdated) isEvent_EventType() {}

var File_proto_thermostat_proto protoreflect.FileDescriptor

const file_proto_thermostat_proto_rawDesc = "" +
	"\n" +
	"\x16proto/thermostat.proto\x12\n" +
	"thermostat\"\xdd\x01\n" +
	"\x1aTemperatureSetPointUpdated\x126\n" +
	"\tdevice_id\x18\x01 \x01(\v2\x14.thermostat.DeviceIdH\x00R\bdeviceId\x88\x01\x01\x129\n" +
	"\n" +
	"set_points\x18\x02 \x01(\v2\x15.thermostat.SetPointsH\x01R\tsetPoints\x88\x01\x01\x12!\n" +
	"\ttimestamp\x18\x03 \x01(\x05H\x02R\ttimestamp\x88\x01\x01B\f\n" +
	"\n" +
	"_device_idB\r\n" +
	"\v_set_pointsB\f\n" +
	"\n" +
	"_timestamp\"\xb9\x01\n" +
	"\tSetPoints\x12B\n" +
	"\x0ecool_set_point\x18\x01 \x01(\v2\x17.thermostat.TemperatureH\x00R\fcoolSetPoint\x88\x01\x01\x12B\n" +
	"\x0eheat_set_point\x18\x02 \x01(\v2\x17.thermostat.TemperatureH\x01R\fheatSetPoint\x88\x01\x01B\x11\n" +
	"\x0f_cool_set_pointB\x11\n" +
	"\x0f_heat_set_point\"&\n" +
	"\bDeviceId\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01B\x05\n" +
	"\x03_id\"\xe0\x01\n" +
	"\x17IndoorTemperatueUpdated\x126\n" +
	"\tdevice_id\x18\x01 \x01(\v2\x14.thermostat.DeviceIdH\x00R\bdeviceId\x88\x01\x01\x12>\n" +
	"\vtemperature\x18\x02 \x01(\v2\x17.thermostat.TemperatureH\x01R\vtemperature\x88\x01\x01\x12!\n" +
	"\ttimestamp\x18\x03 \x01(\x05H\x02R\ttimestamp\x88\x01\x01B\f\n" +
	"\n" +
	"_device_idB\x0e\n" +
	"\f_temperatureB\f\n" +
	"\n" +
	"_timestamp\"\x8d\x01\n" +
	"\vTemperature\x128\n" +
	"\x05scale\x18\x01 \x01(\x0e2\x1d.thermostat.Temperature.ScaleH\x00R\x05scale\x88\x01\x01\x12\x19\n" +
	"\x05value\x18\x02 \x01(\tH\x01R\x05value\x88\x01\x01\"\x15\n" +
	"\x05Scale\x12\x05\n" +
	"\x01F\x10\x00\x12\x05\n" +
	"\x01C\x10\x01B\b\n" +
	"\x06_scaleB\b\n" +
	"\x06_value\"\xd2\x01\n" +
	"\x05Event\x12V\n" +
	"\x12set_points_updated\x18\x01 \x01(\v2&.thermostat.TemperatureSetPointUpdatedH\x00R\x10setPointsUpdated\x12c\n" +
	"\x1aindoor_temperature_updated\x18\x02 \x01(\v2#.thermostat.IndoorTemperatueUpdatedH\x00R\x18indoorTemperatureUpdatedB\f\n" +
	"\n" +
	"event_typeB#Z!device-manager/proto;thermostatpbb\x06proto3"

var (
	file_proto_thermostat_proto_rawDescOnce sync.Once
	file_proto_thermostat_proto_rawDescData []byte
)

func file_proto_thermostat_proto_rawDescGZIP() []byte {
	file_proto_thermostat_proto_rawDescOnce.Do(func() {
		file_proto_thermostat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_thermostat_proto_rawDesc), len(file_proto_thermostat_proto_rawDesc)))
	})
	return file_proto_thermostat_proto_rawDescData
}

var file_proto_thermostat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_thermostat_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_thermostat_proto_goTypes = []any{
	(Temperature_Scale)(0),             // 0: thermostat.Temperature.Scale
	(*TemperatureSetPointUpdated)(nil), // 1: thermostat.TemperatureSetPointUpdated
	(*SetPoints)(nil),                  // 2: thermostat.SetPoints
	(*DeviceId)(nil),                   // 3: thermostat.DeviceId
	(*IndoorTemperatueUpdated)(nil),    // 4: thermostat.IndoorTemperatueUpdated
	(*Temperature)(nil),                // 5: thermostat.Temperature
	(*Event)(nil),                      // 6: thermostat.Event
}
var file_proto_thermostat_proto_depIdxs = []int32{
	3, // 0: thermostat.TemperatureSetPointUpdated.device_id:type_name -> thermostat.DeviceId
	2, // 1: thermostat.TemperatureSetPointUpdated.set_points:type_name -> thermostat.SetPoints
	5, // 2: thermostat.SetPoints.cool_set_point:type_name -> thermostat.Temperature
	5, // 3: thermostat.SetPoints.heat_set_point:type_name -> thermostat.Temperature
	3, // 4: thermostat.IndoorTemperatueUpdated.device_id:type_name -> thermostat.DeviceId
	5, // 5: thermostat.IndoorTemperatueUpdated.temperature:type_name -> thermostat.Temperature
	0, // 6: thermostat.Temperature.scale:type_name -> thermostat.Temperature.Scale
	1, // 7: thermostat.Event.set_points_updated:type_name -> thermostat.TemperatureSetPointUpdated
	4, // 8: thermostat.Event.indoor_temperature_updated:type_name -> thermostat.IndoorTemperatueUpdated
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_proto_thermostat_proto_init() }
func file_proto_thermostat_proto_init() {
	if File_proto_thermostat_proto != nil {
		return
	}
	file_proto_thermostat_proto_msgTypes[0].OneofWrappers = []any{}
	file_proto_thermostat_proto_msgTypes[1].OneofWrappers = []any{}
	file_proto_thermostat_proto_msgTypes[2].OneofWrappers = []any{}
	file_proto_thermostat_proto_msgTypes[3].OneofWrappers = []any{}
	file_proto_thermostat_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_thermostat_proto_msgTypes[5].OneofWrappers = []any{
		(*Event_SetPointsUpdated)(nil),
		(*Event_IndoorTemperatureUpdated)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_thermostat_proto_rawDesc), len(file_proto_thermostat_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_thermostat_proto_goTypes,
		DependencyIndexes: file_proto_thermostat_proto_depIdxs,
		EnumInfos:         file_proto_thermostat_proto_enumTypes,
		MessageInfos:      file_proto_thermostat_proto_msgTypes,
	}.Build()
	File_proto_thermostat_proto = out.File
	file_proto_thermostat_proto_goTypes = nil
	file_proto_thermostat_proto_depIdxs = nil
}
